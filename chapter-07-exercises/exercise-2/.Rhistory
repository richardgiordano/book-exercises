first_ten <- 10:20
?nchar
# Create a vector `next_ten` that has the values 21 through 30 in it (using the
# seq() function)
next_ten <- seq(21,30)
# Create a vector `all_numbers` by combining the previous two vectors
all_numbers <- c(first_ten + next_ten)
# Create a variable `eleventh` that contains the 11th element in `all_numbers`
eleventh <- all_numbers [11]
first_ten <- 10:20
# Create a vector `next_ten` that has the values 21 through 30 in it (using the
# seq() function)
next_ten <- seq(21,30)
# Create a vector `all_numbers` by combining the previous two vectors
all_numbers <- c(first_ten + next_ten)
# Create a variable `eleventh` that contains the 11th element in `all_numbers`
eleventh <- all_numbers [11]
all_numbers <- c(paste(first_ten, next_ten))
all_numbers <- c(first_ten, next_ten)
eleventh <- all_numbers [11]
some_numbers <- substr(all_numbers, 2, 5)
some_numbers <- all_numbers[2,5]
some_numbers <- all_numbers[2:5]
even <- seq(1,100,2)
even <- seq(1,100,3)
even <- seq(1,100,2)
even <- seq(1,100,1)
even <- seq(1,100,+1)
even <- seq(1,100,+1)
even <- seq(1,100,2)
?sew
?seq
even <- seq(1,100,-1)
even <- seq(1,100,(-1))
even <- seq(1,100,length.out -1)
even <- seq(1,100,3)
even <- seq(1,100,3-1)
even <- seq(1,100,3-2)
even <- seq(1,100,3-4)
prefix <- c(phone_numbers[1:3])
phone_numbers <- c(8,6,7,5,3,0,9)
# Create a vector `prefix` that has the first three elements of `phone_numbers`
prefix <- c(phone_numbers[1:3])
small <- [phone_numbers >5]
small <- c[phone_numbers >5]
small <- c([phone_numbers >5])
small <- c(phone_numbers[phone_numbers <5])
small <- c(phone_numbers[phone_numbers <= 5])
large <- c(phone_numbers[phone_numbers > 5])
phone_numbers <- c(8,6,7,5,3,0,9)
# Create a vector `prefix` that has the first three elements of `phone_numbers`
prefix <- c(phone_numbers[1:3])
# Create a vector `small` that has the values of `phone_numbers` that are
# less than or equal to 5
small <- c(phone_numbers[phone_numbers <= 5])
# Create a vector `large` that has the values of `phone_numbers` that are
# strictly greater than 5
large <- c(phone_numbers[phone_numbers > 5])
phone_numbers <- c(8,6,7,5,3,0,9)
# Create a vector `prefix` that has the first three elements of `phone_numbers`
prefix <- c(phone_numbers[1:3])
# Create a vector `small` that has the values of `phone_numbers` that are
# less than or equal to 5
small <- c(phone_numbers[phone_numbers <= 5])
# Create a vector `large` that has the values of `phone_numbers` that are
# strictly greater than 5
large <- c(phone_numbers[phone_numbers > 5])
phone_numbers[phone_numbers > 5] <- 5
even <- seq(2,100,2)
x_range <- seq(-5,10,.1)
# Create a vector `sin_wave` by calling the `sin()` function on each element
# in `x_range`.
sin_wave <- sin(x_range)
# Create a vector `cos_wave` by calling the `cos()` function on each element
# in `x_range`.
cos_wave <- cos(x_range)
# Create a vector `wave` by multiplying `sin_wave` and `cos_wave` together, then
# adding `sin_wave` to the product
wave <- c((sin_wave*cos_wave)+sin_wave )
# Use the `plot()` function to plot your `wave`!
plot(wave)
my_breakfast <- c("english muffin", "bagel", "yogurt")
# Create a vector `my_lunch` of everything you ate (or will eat) for lunch
my_lunch <- c("pizza", "fries")
# Create a list `meals` that has contains your breakfast and lunch
meals <- c(my_breakfast, my_lunch)
my_breakfast <- c("english muffin", "bagel", "yogurt")
# Create a vector `my_lunch` of everything you ate (or will eat) for lunch
my_lunch <- c("pizza", "fries")
# Create a list `meals` that has contains your breakfast and lunch
meals <- c(my_breakfast, my_lunch)
meals <- list(
breakfast = my_breakfast
lunch = my_lunch
)
some_numbers <- c(all_numbers[2:5])
some_numbers <- all_numbers[2:5]
some_numbers <- all_numbers[c(2:5)]
